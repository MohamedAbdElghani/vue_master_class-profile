{"remainingRequest":"/home/mahmoud/projects/vue_master_class/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/mahmoud/projects/vue_master_class/src/pages/ThreadShow.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/mahmoud/projects/vue_master_class/src/pages/ThreadShow.vue","mtime":1644403973117},{"path":"/home/mahmoud/projects/vue_master_class/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mahmoud/projects/vue_master_class/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mahmoud/projects/vue_master_class/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mahmoud/projects/vue_master_class/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBzb3VyY2VEYXRhIGZyb20gJ0AvZGF0YS5qc29uJwppbXBvcnQgUG9zdExpc3QgZnJvbSAnQC9jb21wb25lbnRzL1Bvc3RMaXN0JwppbXBvcnQgRWRpdFBvc3QgZnJvbSAnQC9jb21wb25lbnRzL0VkaXRQb3N0JwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1RocmVhZFNob3cnLAogIGNvbXBvbmVudHM6IHsKICAgIFBvc3RMaXN0LAogICAgRWRpdFBvc3QKICB9LAogIHByb3BzOiB7CiAgICBpZDogewogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdHlwZTogU3RyaW5nCiAgICB9CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHRocmVhZHM6IHNvdXJjZURhdGEudGhyZWFkcywKICAgICAgcG9zdHM6IHNvdXJjZURhdGEucG9zdHMKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICB0aHJlYWQgKCkgewogICAgICByZXR1cm4gdGhpcy50aHJlYWRzLmZpbmQodGhyZWFkID0+IHRocmVhZC5pZCA9PT0gdGhpcy5pZCkgLy8gYWxzbyBhdmFpbGFibGUgdW5kZXIgdGhpcy4kcm91dGUucGFyYW1zLmlkCiAgICB9LAogICAgdGhyZWFkUG9zdHMgKCkgewogICAgICByZXR1cm4gdGhpcy5wb3N0cy5maWx0ZXIocG9zdCA9PiBwb3N0LnRocmVhZElkID09PSB0aGlzLmlkKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWRkUG9zdCAoZXZlbnREYXRhKSB7CiAgICAgIGNvbnNvbGUubG9nKGV2ZW50RGF0YSkKICAgICAgY29uc3QgcG9zdCA9IHsKICAgICAgICAuLi5ldmVudERhdGEucG9zdCwKICAgICAgICB0aHJlYWRJZDogdGhpcy5pZAogICAgICB9CiAgICAgIHRoaXMucG9zdHMucHVzaChwb3N0KQogICAgICB0aGlzLnRocmVhZC5wb3N0cy5wdXNoKHBvc3QuaWQpCiAgICB9CiAgfQp9Cgo="},{"version":3,"sources":["/home/mahmoud/projects/vue_master_class/src/pages/ThreadShow.vue"],"names":[],"mappings":"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","file":"/home/mahmoud/projects/vue_master_class/src/pages/ThreadShow.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"col-large push-top\">\n    <h1>{{ thread.title }}</h1>\n\n    <post-list :posts=\"threadPosts\"/>\n    <EditPost @save=\"addPost\"></EditPost>\n  </div>\n</template>\n\n<script>\nimport sourceData from '@/data.json'\nimport PostList from '@/components/PostList'\nimport EditPost from '@/components/EditPost'\nexport default {\n  name: 'ThreadShow',\n  components: {\n    PostList,\n    EditPost\n  },\n  props: {\n    id: {\n      required: true,\n      type: String\n    }\n  },\n  data () {\n    return {\n      threads: sourceData.threads,\n      posts: sourceData.posts\n    }\n  },\n  computed: {\n    thread () {\n      return this.threads.find(thread => thread.id === this.id) // also available under this.$route.params.id\n    },\n    threadPosts () {\n      return this.posts.filter(post => post.threadId === this.id)\n    }\n  },\n  methods: {\n    addPost (eventData) {\n      console.log(eventData)\n      const post = {\n        ...eventData.post,\n        threadId: this.id\n      }\n      this.posts.push(post)\n      this.thread.posts.push(post.id)\n    }\n  }\n}\n\n</script>\n"]}]}